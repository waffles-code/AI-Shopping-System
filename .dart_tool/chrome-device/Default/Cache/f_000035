define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/services/text_input.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/aishop/theme.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/painting/border_radius.dart'], (function load__packages__aishop__components__round_textfield_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__services__text_input$46dart, packages__flutter__src__material__icon_button$46dart, packages__aishop__theme$46dart, packages__flutter__src__painting__strut_style$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__painting__border_radius$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const media_query = packages__flutter__src__widgets__widget_span$46dart.src__widgets__media_query;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const focus_manager = packages__flutter__src__widgets__widget_span$46dart.src__widgets__focus_manager;
  const editable_text = packages__flutter__src__widgets__widget_span$46dart.src__widgets__editable_text;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const theme = packages__aishop__theme$46dart.theme;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  var round_textfield = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  var T = {
    EdgeInsetsGeometryN: () => (T.EdgeInsetsGeometryN = dart.constFn(dart.nullable(edge_insets.EdgeInsetsGeometry)))(),
    FocusNodeN: () => (T.FocusNodeN = dart.constFn(dart.nullable(focus_manager.FocusNode)))(),
    TextInputTypeN: () => (T.TextInputTypeN = dart.constFn(dart.nullable(text_input.TextInputType)))(),
    TextInputActionN: () => (T.TextInputActionN = dart.constFn(dart.nullable(text_input.TextInputAction)))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    StringToNvoid: () => (T.StringToNvoid = dart.constFn(dart.nullable(T.StringTovoid())))(),
    TextEditingControllerN: () => (T.TextEditingControllerN = dart.constFn(dart.nullable(editable_text.TextEditingController)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    VoidToNvoid: () => (T.VoidToNvoid = dart.constFn(dart.nullable(T.VoidTovoid())))(),
    WidgetN: () => (T.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    TextStyleN: () => (T.TextStyleN = dart.constFn(dart.nullable(text_style.TextStyle)))(),
    InputBorderN: () => (T.InputBorderN = dart.constFn(dart.nullable(input_border.InputBorder)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4279769112.0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295.0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [_name]: "BorderStyle.solid",
        index: 1
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4278190080.0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [BorderSide_style]: C[3] || CT.C3,
        [BorderSide_width]: 2,
        [BorderSide_color]: C[4] || CT.C4
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "focusNode",
        [_Location_column]: 11,
        [_Location_line]: 60,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 11,
        [_Location_line]: 61,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "textInputAction",
        [_Location_column]: 11,
        [_Location_line]: 62,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 11,
        [_Location_line]: 63,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 11,
        [_Location_line]: 64,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "controller",
        [_Location_column]: 11,
        [_Location_line]: 65,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onTap",
        [_Location_column]: 11,
        [_Location_line]: 66,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onFieldSubmitted",
        [_Location_column]: 11,
        [_Location_line]: 67,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 11,
        [_Location_line]: 68,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 11,
        [_Location_line]: 115,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.constList([C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16], widget_inspector._Location);
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[6] || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 9,
        [_Location_line]: 59,
        [_Location_file]: "file:///C:/Users/Mmasehume/OneDrive/Documents/SD%20project/AI-Shopping-System/lib/components/round_textfield.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 9,
        [_Location_line]: 56,
        [_Location_file]: null
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "margin",
        [_Location_column]: 9,
        [_Location_line]: 57,
        [_Location_file]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 9,
        [_Location_line]: 58,
        [_Location_file]: null
      });
    },
    get C18() {
      return C[18] = dart.constList([C[19] || CT.C19, C[20] || CT.C20, C[21] || CT.C21], widget_inspector._Location);
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[18] || CT.C18,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 55,
        [_Location_file]: "file:///C:/Users/Mmasehume/OneDrive/Documents/SD%20project/AI-Shopping-System/lib/components/round_textfield.dart"
      });
    }
  }, false);
  var C = Array(22).fill(void 0);
  var I = [
    "file:///C:/Users/Mmasehume/OneDrive/Documents/SD%20project/AI-Shopping-System/lib/components/round_textfield.dart",
    "package:aishop/components/round_textfield.dart"
  ];
  var text$ = dart.privateName(round_textfield, "RoundTextField.text");
  var press$ = dart.privateName(round_textfield, "RoundTextField.press");
  var color$ = dart.privateName(round_textfield, "RoundTextField.color");
  var textColor$ = dart.privateName(round_textfield, "RoundTextField.textColor");
  var control$ = dart.privateName(round_textfield, "RoundTextField.control");
  var margin$ = dart.privateName(round_textfield, "RoundTextField.margin");
  var preicon$ = dart.privateName(round_textfield, "RoundTextField.preicon");
  var tap$ = dart.privateName(round_textfield, "RoundTextField.tap");
  var suficon$ = dart.privateName(round_textfield, "RoundTextField.suficon");
  var submitted$ = dart.privateName(round_textfield, "RoundTextField.submitted");
  var errorText$ = dart.privateName(round_textfield, "RoundTextField.errorText");
  var errorborder$ = dart.privateName(round_textfield, "RoundTextField.errorborder");
  var errorstyle$ = dart.privateName(round_textfield, "RoundTextField.errorstyle");
  var validate$ = dart.privateName(round_textfield, "RoundTextField.validate");
  var focusNode$ = dart.privateName(round_textfield, "RoundTextField.focusNode");
  var keyboardType$ = dart.privateName(round_textfield, "RoundTextField.keyboardType");
  var textInputAction$ = dart.privateName(round_textfield, "RoundTextField.textInputAction");
  var autofocus$ = dart.privateName(round_textfield, "RoundTextField.autofocus");
  var onChanged$ = dart.privateName(round_textfield, "RoundTextField.onChanged");
  var onSubmitted$ = dart.privateName(round_textfield, "RoundTextField.onSubmitted");
  var Color_value = dart.privateName(ui, "Color.value");
  var _name = dart.privateName(borders, "_name");
  var BorderSide_style = dart.privateName(borders, "BorderSide.style");
  var BorderSide_width = dart.privateName(borders, "BorderSide.width");
  var BorderSide_color = dart.privateName(borders, "BorderSide.color");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  round_textfield.RoundTextField = class RoundTextField extends framework.StatelessWidget {
    get text() {
      return this[text$];
    }
    set text(value) {
      super.text = value;
    }
    get press() {
      return this[press$];
    }
    set press(value) {
      super.press = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get textColor() {
      return this[textColor$];
    }
    set textColor(value) {
      super.textColor = value;
    }
    get control() {
      return this[control$];
    }
    set control(value) {
      super.control = value;
    }
    get margin() {
      return this[margin$];
    }
    set margin(value) {
      super.margin = value;
    }
    get preicon() {
      return this[preicon$];
    }
    set preicon(value) {
      super.preicon = value;
    }
    get tap() {
      return this[tap$];
    }
    set tap(value) {
      super.tap = value;
    }
    get suficon() {
      return this[suficon$];
    }
    set suficon(value) {
      super.suficon = value;
    }
    get submitted() {
      return this[submitted$];
    }
    set submitted(value) {
      super.submitted = value;
    }
    get errorText() {
      return this[errorText$];
    }
    set errorText(value) {
      super.errorText = value;
    }
    get errorborder() {
      return this[errorborder$];
    }
    set errorborder(value) {
      super.errorborder = value;
    }
    get errorstyle() {
      return this[errorstyle$];
    }
    set errorstyle(value) {
      super.errorstyle = value;
    }
    get validate() {
      return this[validate$];
    }
    set validate(value) {
      super.validate = value;
    }
    get focusNode() {
      return this[focusNode$];
    }
    set focusNode(value) {
      super.focusNode = value;
    }
    get keyboardType() {
      return this[keyboardType$];
    }
    set keyboardType(value) {
      super.keyboardType = value;
    }
    get textInputAction() {
      return this[textInputAction$];
    }
    set textInputAction(value) {
      super.textInputAction = value;
    }
    get autofocus() {
      return this[autofocus$];
    }
    set autofocus(value) {
      super.autofocus = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get onSubmitted() {
      return this[onSubmitted$];
    }
    set onSubmitted(value) {
      super.onSubmitted = value;
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 53, 29, "context");
      let size = media_query.MediaQuery.of(context).size;
      return new container.Container.new({width: dart.notNull(size.width) * 0.8, margin: T.EdgeInsetsGeometryN().as(this.margin), child: new text_form_field.TextFormField.new({focusNode: T.FocusNodeN().as(this.focusNode), keyboardType: T.TextInputTypeN().as(this.keyboardType), textInputAction: T.TextInputActionN().as(this.textInputAction), autofocus: core.bool.as(this.autofocus), onChanged: T.StringToNvoid().as(this.onChanged), controller: T.TextEditingControllerN().as(this.control), onTap: T.VoidToNvoid().as(this.tap), onFieldSubmitted: T.StringToNvoid().as(this.submitted), decoration: new input_decorator.InputDecoration.new({enabled: true, prefixIcon: T.WidgetN().as(this.preicon), suffixIcon: T.WidgetN().as(this.suficon), fillColor: theme.white, hintText: T.StringN().as(this.text), errorText: T.StringN().as(this.errorText), errorStyle: T.TextStyleN().as(this.errorstyle), focusedErrorBorder: T.InputBorderN().as(this.errorborder), enabledBorder: new input_border.OutlineInputBorder.new({borderSide: C[2] || CT.C2, borderRadius: new border_radius.BorderRadius.circular(100.0)}), focusedBorder: new input_border.OutlineInputBorder.new({borderSide: C[2] || CT.C2, borderRadius: new border_radius.BorderRadius.circular(100.0)}), border: new input_border.OutlineInputBorder.new({borderSide: C[2] || CT.C2, borderRadius: new border_radius.BorderRadius.circular(100.0)}), errorBorder: new input_border.OutlineInputBorder.new({borderSide: C[2] || CT.C2, borderRadius: new border_radius.BorderRadius.circular(100.0)})}), style: new text_style.TextStyle.new({fontFamily: "Nunito Sans", fontWeight: ui.FontWeight.w300}), $creationLocationd_0dea112b090073317d4: C[5] || CT.C5}), $creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
    }
  };
  (round_textfield.RoundTextField.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let press = opts && 'press' in opts ? opts.press : null;
    let color = opts && 'color' in opts ? opts.color : C[0] || CT.C0;
    let textColor = opts && 'textColor' in opts ? opts.textColor : C[1] || CT.C1;
    let control = opts && 'control' in opts ? opts.control : null;
    let margin = opts && 'margin' in opts ? opts.margin : null;
    let preicon = opts && 'preicon' in opts ? opts.preicon : null;
    let tap = opts && 'tap' in opts ? opts.tap : null;
    let suficon = opts && 'suficon' in opts ? opts.suficon : null;
    let submitted = opts && 'submitted' in opts ? opts.submitted : null;
    let errorText = opts && 'errorText' in opts ? opts.errorText : null;
    let errorborder = opts && 'errorborder' in opts ? opts.errorborder : null;
    let errorstyle = opts && 'errorstyle' in opts ? opts.errorstyle : null;
    let validate = opts && 'validate' in opts ? opts.validate : null;
    let focusNode = opts && 'focusNode' in opts ? opts.focusNode : null;
    let keyboardType = opts && 'keyboardType' in opts ? opts.keyboardType : null;
    let textInputAction = opts && 'textInputAction' in opts ? opts.textInputAction : null;
    let autofocus = opts && 'autofocus' in opts ? opts.autofocus : null;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let onSubmitted = opts && 'onSubmitted' in opts ? opts.onSubmitted : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[text$] = text;
    this[press$] = press;
    this[color$] = color;
    this[textColor$] = textColor;
    this[control$] = control;
    this[margin$] = margin;
    this[preicon$] = preicon;
    this[tap$] = tap;
    this[suficon$] = suficon;
    this[submitted$] = submitted;
    this[errorText$] = errorText;
    this[errorborder$] = errorborder;
    this[errorstyle$] = errorstyle;
    this[validate$] = validate;
    this[focusNode$] = focusNode;
    this[keyboardType$] = keyboardType;
    this[textInputAction$] = textInputAction;
    this[autofocus$] = autofocus;
    this[onChanged$] = onChanged;
    this[onSubmitted$] = onSubmitted;
    round_textfield.RoundTextField.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = round_textfield.RoundTextField.prototype;
  dart.addTypeTests(round_textfield.RoundTextField);
  dart.addTypeCaches(round_textfield.RoundTextField);
  dart.setMethodSignature(round_textfield.RoundTextField, () => ({
    __proto__: dart.getMethods(round_textfield.RoundTextField.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(round_textfield.RoundTextField, I[1]);
  dart.setFieldSignature(round_textfield.RoundTextField, () => ({
    __proto__: dart.getFields(round_textfield.RoundTextField.__proto__),
    text: dart.finalFieldType(dart.dynamic),
    press: dart.finalFieldType(dart.dynamic),
    color: dart.finalFieldType(dart.dynamic),
    textColor: dart.finalFieldType(dart.dynamic),
    control: dart.finalFieldType(dart.dynamic),
    margin: dart.finalFieldType(dart.dynamic),
    preicon: dart.finalFieldType(dart.dynamic),
    tap: dart.finalFieldType(dart.dynamic),
    suficon: dart.finalFieldType(dart.dynamic),
    submitted: dart.finalFieldType(dart.dynamic),
    errorText: dart.finalFieldType(dart.dynamic),
    errorborder: dart.finalFieldType(dart.dynamic),
    errorstyle: dart.finalFieldType(dart.dynamic),
    validate: dart.finalFieldType(dart.dynamic),
    focusNode: dart.finalFieldType(dart.dynamic),
    keyboardType: dart.finalFieldType(dart.dynamic),
    textInputAction: dart.finalFieldType(dart.dynamic),
    autofocus: dart.finalFieldType(dart.dynamic),
    onChanged: dart.finalFieldType(dart.dynamic),
    onSubmitted: dart.finalFieldType(dart.dynamic)
  }));
  dart.trackLibraries("packages/aishop/components/round_textfield.dart", {
    "package:aishop/components/round_textfield.dart": round_textfield
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["round_textfield.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMQ;;;;;;IACC;;;;;;IACA;;;;;;IAAO;;;;;;IACP;;;;;;IACD;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;;UA4BoB;AACnB,iBAAkB,AAAY,0BAAT,OAAO;AACjC,YAAO,qCACe,aAAX,AAAK,IAAD,UAAS,wCACZ,qBAER,oEACa,qDACG,6DACG,+CACN,iDACA,2DACC,yCACL,kDACW,6BAElB,kDACW,iCACK,0CACA,0BACD,sCACD,sCACC,+CACC,0DACQ,kCAEpB,kFAOiB,wCAAS,yBAG1B,kFAOiB,wCAAS,kBAEpB,kFAMS,wCAAS,uBAEb,kFAMI,wCAAS,mBAI5B,0CACgB,2BACW;IAInC;;;QA7FO;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAnBA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACF,kEAAW,GAAG;;EAAC","file":"../../../../../../../../packages/aishop/components/round_textfield.dart.lib.js"}');
  // Exports:
  return {
    components__round_textfield: round_textfield
  };
}));

//# sourceMappingURL=round_textfield.dart.lib.js.map
