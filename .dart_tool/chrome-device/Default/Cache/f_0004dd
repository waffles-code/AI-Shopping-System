define(['dart_sdk', 'packages/get/get_core/src/get_main.dart'], (function load__packages__get__get_utils__src__extensions__internacionalization_dart(dart_sdk, packages__get__get_core__src__get_main$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const get_main = packages__get__get_core__src__get_main$46dart.get_core__src__get_main;
  var internacionalization = Object.create(dart.library);
  var $containsKey = dartx.containsKey;
  var $_get = dartx._get;
  var $isNotEmpty = dartx.isNotEmpty;
  var $toString = dartx.toString;
  var $replaceFirst = dartx.replaceFirst;
  var $replaceAll = dartx.replaceAll;
  var $forEach = dartx.forEach;
  var $addAll = dartx.addAll;
  var $_set = dartx._set;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    MapOfString$String: () => (T.MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))(),
    IdentityMapOfString$MapOfString$String: () => (T.IdentityMapOfString$MapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, T.MapOfString$String())))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringToString: () => (T.ListOfStringToString = dart.constFn(dart.fnType(core.String, [], [T.ListOfString()])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    intN: () => (T.intN = dart.constFn(dart.nullable(core.int)))(),
    StringNAndintNAndListOfStringToString: () => (T.StringNAndintNAndListOfStringToString = dart.constFn(dart.fnType(core.String, [], [T.StringN(), T.intN(), T.ListOfString()])))(),
    StringAndStringTovoid: () => (T.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    MapOfString$StringToStringN: () => (T.MapOfString$StringToStringN = dart.constFn(dart.fnType(T.StringN(), [], [T.MapOfString$String()])))(),
    StringNAndintNAndMapOfString$StringToStringN: () => (T.StringNAndintNAndMapOfString$StringToStringN = dart.constFn(dart.fnType(T.StringN(), [], [T.StringN(), T.intN(), T.MapOfString$String()])))(),
    MapOfString$MapOfString$String: () => (T.MapOfString$MapOfString$String = dart.constFn(core.Map$(core.String, T.MapOfString$String())))(),
    MapOfString$MapOfString$StringTovoid: () => (T.MapOfString$MapOfString$StringTovoid = dart.constFn(dart.fnType(dart.void, [T.MapOfString$MapOfString$String()])))(),
    StringAndMapOfString$StringTovoid: () => (T.StringAndMapOfString$StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, T.MapOfString$String()])))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList([], core.String);
    },
    get C1() {
      return C[1] = dart.constMap(core.String, core.String, []);
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "package:get/get_utils/src/extensions/internacionalization.dart",
    "file:///C:/Src/flutter_windows_2.0.4-stable/flutter/.pub-cache/hosted/pub.dartlang.org/get-4.1.4/lib/get_utils/src/extensions/internacionalization.dart"
  ];
  internacionalization._IntlHost = class _IntlHost extends core.Object {};
  (internacionalization._IntlHost.new = function() {
    this.locale = null;
    this.fallbackLocale = null;
    this.translations = new (T.IdentityMapOfString$MapOfString$String()).new();
    ;
  }).prototype = internacionalization._IntlHost.prototype;
  dart.addTypeTests(internacionalization._IntlHost);
  dart.addTypeCaches(internacionalization._IntlHost);
  dart.setLibraryUri(internacionalization._IntlHost, I[0]);
  dart.setFieldSignature(internacionalization._IntlHost, () => ({
    __proto__: dart.getFields(internacionalization._IntlHost.__proto__),
    locale: dart.fieldType(dart.nullable(ui.Locale)),
    fallbackLocale: dart.fieldType(dart.nullable(ui.Locale)),
    translations: dart.fieldType(core.Map$(core.String, core.Map$(core.String, core.String)))
  }));
  internacionalization['Trans|get#tr'] = function Trans$124get$35tr($this) {
    let t1;
    if ($this == null) dart.nullFailed(I[1], 5, 14, "#this");
    if ((t1 = internacionalization['LocalesIntl|get#locale'](get_main.Get), t1 == null ? null : t1.languageCode) == null) return $this;
    if (dart.test(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$containsKey](dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode) + "_" + dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).countryCode))) && dart.test(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode) + "_" + dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).countryCode)))[$containsKey]($this))) {
      return dart.nullCheck(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode) + "_" + dart.str(dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).countryCode)))[$_get]($this));
    } else if (dart.test(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$containsKey](dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode)) && dart.test(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode))[$containsKey]($this))) {
      return dart.nullCheck(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](dart.nullCheck(internacionalization['LocalesIntl|get#locale'](get_main.Get)).languageCode))[$_get]($this));
    } else if (internacionalization['LocalesIntl|get#fallbackLocale'](get_main.Get) != null) {
      let fallback = dart.nullCheck(internacionalization['LocalesIntl|get#fallbackLocale'](get_main.Get));
      let key = dart.str(fallback.languageCode) + "_" + dart.str(fallback.countryCode);
      if (dart.test(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$containsKey](key)) && dart.test(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](key))[$containsKey]($this))) {
        return dart.nullCheck(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](key))[$_get]($this));
      }
      if (dart.test(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$containsKey](fallback.languageCode)) && dart.test(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](fallback.languageCode))[$containsKey]($this))) {
        return dart.nullCheck(dart.nullCheck(internacionalization['LocalesIntl|get#translations'](get_main.Get)[$_get](fallback.languageCode))[$_get]($this));
      }
      return $this;
    } else {
      return $this;
    }
  };
  internacionalization['Trans|trArgs'] = function Trans$124trArgs($this, args = C[0] || CT.C0) {
    if ($this == null) dart.nullFailed(I[1], 44, 10, "#this");
    if (args == null) dart.nullFailed(I[1], 44, 31, "args");
    let key = internacionalization['Trans|get#tr']($this);
    if (dart.test(args[$isNotEmpty])) {
      for (let arg of args) {
        key = key[$replaceFirst](core.RegExp.new("%s"), dart.toString(arg));
      }
    }
    return key;
  };
  internacionalization['Trans|get#trArgs'] = function Trans$124get$35trArgs($this) {
    if ($this == null) dart.nullFailed(I[1], 44, 10, "#this");
    return dart.fn((args = C[0] || CT.C0) => {
      if (args == null) dart.nullFailed(I[1], 44, 31, "args");
      return internacionalization['Trans|trArgs']($this, args);
    }, T.ListOfStringToString());
  };
  internacionalization['Trans|trPlural'] = function Trans$124trPlural($this, pluralKey = null, i = null, args = C[0] || CT.C0) {
    if ($this == null) dart.nullFailed(I[1], 54, 10, "#this");
    if (args == null) dart.nullFailed(I[1], 54, 60, "args");
    return i === 1 ? internacionalization['Trans|trArgs']($this, args) : internacionalization['Trans|trArgs'](dart.nullCheck(pluralKey), args);
  };
  internacionalization['Trans|get#trPlural'] = function Trans$124get$35trPlural($this) {
    if ($this == null) dart.nullFailed(I[1], 54, 10, "#this");
    return dart.fn((pluralKey = null, i = null, args = C[0] || CT.C0) => {
      if (args == null) dart.nullFailed(I[1], 54, 60, "args");
      return internacionalization['Trans|trPlural']($this, pluralKey, i, args);
    }, T.StringNAndintNAndListOfStringToString());
  };
  internacionalization['Trans|trParams'] = function Trans$124trParams($this, params = C[1] || CT.C1) {
    if ($this == null) dart.nullFailed(I[1], 58, 11, "#this");
    if (params == null) dart.nullFailed(I[1], 58, 41, "params");
    let trans = internacionalization['Trans|get#tr']($this);
    if (dart.test(params[$isNotEmpty])) {
      params[$forEach](dart.fn((key, value) => {
        if (key == null) dart.nullFailed(I[1], 61, 23, "key");
        if (value == null) dart.nullFailed(I[1], 61, 28, "value");
        trans = trans[$replaceAll]("@" + dart.str(key), value);
      }, T.StringAndStringTovoid()));
    }
    return trans;
  };
  internacionalization['Trans|get#trParams'] = function Trans$124get$35trParams($this) {
    if ($this == null) dart.nullFailed(I[1], 58, 11, "#this");
    return dart.fn((params = C[1] || CT.C1) => {
      if (params == null) dart.nullFailed(I[1], 58, 41, "params");
      return internacionalization['Trans|trParams']($this, params);
    }, T.MapOfString$StringToStringN());
  };
  internacionalization['Trans|trPluralParams'] = function Trans$124trPluralParams($this, pluralKey = null, i = null, params = C[1] || CT.C1) {
    if ($this == null) dart.nullFailed(I[1], 68, 11, "#this");
    if (params == null) dart.nullFailed(I[1], 69, 55, "params");
    return i === 1 ? internacionalization['Trans|trParams']($this, params) : internacionalization['Trans|trParams'](dart.nullCheck(pluralKey), params);
  };
  internacionalization['Trans|get#trPluralParams'] = function Trans$124get$35trPluralParams($this) {
    if ($this == null) dart.nullFailed(I[1], 68, 11, "#this");
    return dart.fn((pluralKey = null, i = null, params = C[1] || CT.C1) => {
      if (params == null) dart.nullFailed(I[1], 69, 55, "params");
      return internacionalization['Trans|trPluralParams']($this, pluralKey, i, params);
    }, T.StringNAndintNAndMapOfString$StringToStringN());
  };
  internacionalization['LocalesIntl|get#locale'] = function LocalesIntl$124get$35locale($this) {
    if ($this == null) dart.nullFailed(I[1], 85, 15, "#this");
    return internacionalization['LocalesIntl|_intlHost'].locale;
  };
  internacionalization['LocalesIntl|get#fallbackLocale'] = function LocalesIntl$124get$35fallbackLocale($this) {
    if ($this == null) dart.nullFailed(I[1], 87, 15, "#this");
    return internacionalization['LocalesIntl|_intlHost'].fallbackLocale;
  };
  internacionalization['LocalesIntl|set#locale'] = function LocalesIntl$124set$35locale($this, newLocale) {
    if ($this == null) dart.nullFailed(I[1], 89, 7, "#this");
    return internacionalization['LocalesIntl|_intlHost'].locale = newLocale;
  };
  internacionalization['LocalesIntl|set#fallbackLocale'] = function LocalesIntl$124set$35fallbackLocale($this, newLocale) {
    if ($this == null) dart.nullFailed(I[1], 91, 7, "#this");
    return internacionalization['LocalesIntl|_intlHost'].fallbackLocale = newLocale;
  };
  internacionalization['LocalesIntl|get#translations'] = function LocalesIntl$124get$35translations($this) {
    if ($this == null) dart.nullFailed(I[1], 93, 40, "#this");
    return internacionalization['LocalesIntl|_intlHost'].translations;
  };
  internacionalization['LocalesIntl|addTranslations'] = function LocalesIntl$124addTranslations($this, tr) {
    if ($this == null) dart.nullFailed(I[1], 95, 8, "#this");
    if (tr == null) dart.nullFailed(I[1], 95, 57, "tr");
    internacionalization['LocalesIntl|get#translations']($this)[$addAll](tr);
  };
  internacionalization['LocalesIntl|get#addTranslations'] = function LocalesIntl$124get$35addTranslations($this) {
    if ($this == null) dart.nullFailed(I[1], 95, 8, "#this");
    return dart.fn(tr => {
      if (tr == null) dart.nullFailed(I[1], 95, 57, "tr");
      return internacionalization['LocalesIntl|addTranslations']($this, tr);
    }, T.MapOfString$MapOfString$StringTovoid());
  };
  internacionalization['LocalesIntl|appendTranslations'] = function LocalesIntl$124appendTranslations($this, tr) {
    if ($this == null) dart.nullFailed(I[1], 99, 8, "#this");
    if (tr == null) dart.nullFailed(I[1], 99, 60, "tr");
    tr[$forEach](dart.fn((key, map) => {
      if (key == null) dart.nullFailed(I[1], 100, 17, "key");
      if (map == null) dart.nullFailed(I[1], 100, 22, "map");
      if (dart.test(internacionalization['LocalesIntl|get#translations']($this)[$containsKey](key))) {
        dart.nullCheck(internacionalization['LocalesIntl|get#translations']($this)[$_get](key))[$addAll](map);
      } else {
        internacionalization['LocalesIntl|get#translations']($this)[$_set](key, map);
      }
    }, T.StringAndMapOfString$StringTovoid()));
  };
  internacionalization['LocalesIntl|get#appendTranslations'] = function LocalesIntl$124get$35appendTranslations($this) {
    if ($this == null) dart.nullFailed(I[1], 99, 8, "#this");
    return dart.fn(tr => {
      if (tr == null) dart.nullFailed(I[1], 99, 60, "tr");
      return internacionalization['LocalesIntl|appendTranslations']($this, tr);
    }, T.MapOfString$MapOfString$StringTovoid());
  };
  dart.defineLazy(internacionalization, {
    /*internacionalization['LocalesIntl|_intlHost']*/get ['LocalesIntl|_intlHost']() {
      return new internacionalization._IntlHost.new();
    }
  }, false);
  dart.trackLibraries("packages/get/get_utils/src/extensions/internacionalization.dart", {
    "package:get/get_utils/src/extensions/internacionalization.dart": internacionalization
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["internacionalization.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../../../packages/get/get_utils/src/extensions/internacionalization.dart.lib.js"}');
  // Exports:
  return {
    get_utils__src__extensions__internacionalization: internacionalization
  };
}));

//# sourceMappingURL=internacionalization.dart.lib.js.map
